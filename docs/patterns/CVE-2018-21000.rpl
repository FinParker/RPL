pattern CVE-2018-21000

mvar {
    T1: ty
    T2: ty
    size: ident
    func: ident
    vec: ident
    ptr: ident
    cap: ident
    len: ident
    op: Operator
}

util {
    p1 = ```
        pub fn $func(mut $vec: Vec<$T1>) -> Vec<$T2> {
            #unordered! {
                let $size = size_of::<$T2>();
                let $cap = $vec.capacity() $op $size;
                let $len = $vec.len() $op $size;
                let $ptr = $vec.as_mut_ptr();
            }
            forget($vec);
            Vec::from_raw_parts($ptr as *mut $T2, $cap, $len)
        }
    ```
}

patt {
    p =
        | p1 {
            T2 = `u8`
            op = `*`
        }
        | p1 {
            T1 = `u8`
            op = `/`
        }
}

use {
    std::vec::Vec;
	std::mem::size_of;
	std::mem::forget;
}