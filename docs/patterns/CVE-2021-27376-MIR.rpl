pattern CVE-2021-27376

patt {
    use std::net::SocketAddrV6;
    use libc::sockaddr;

    p_const_const_ver = #[mir] fn _ (..) -> _ {
        let $src: *const SocketAddrV6 = _;
        'cast:
        let $dst: *const sockaddr = move $src as *const sockaddr (PtrToPtr);
    }

    p_mut_const_ver = #[mir] fn _ (..) -> _ {
        let $src: *mut SocketAddrV6 = _;
        'cast:
        let $dst: *const sockaddr = move $src as *const sockaddr (PtrToPtr);
    }
    
    p_const_mut_ver = #[mir] fn _ (..) -> _ {
        let $src: *const SocketAddrV6 = _;
        'cast:
        let $dst: *mut sockaddr = move $src as *mut sockaddr (PtrToPtr);
    }
    
    p_mut_mut_ver = #[mir] fn _ (..) -> _ {
        let $src: *mut SocketAddrV6 = _;
        'cast:
        let $dst: *mut sockaddr = move $src as *mut sockaddr (PtrToPtr);
    }
}

diag {
    p_const_const_ver = {
        "wrong assumption of layout compatibility from `std::net::SocketAddrV6` to `libc::sockaddr`",
        help: "it's not guaranteed by Rust standard library. See https://github.com/rust-lang/rust/pull/78802"
    }
    p_mut_const_ver = {
        "wrong assumption of layout compatibility from `std::net::SocketAddrV6` to `libc::sockaddr`",
        help: "it's not guaranteed by Rust standard library. See https://github.com/rust-lang/rust/pull/78802"
    }
    p_const_mut_ver = {
        "wrong assumption of layout compatibility from `std::net::SocketAddrV6` to `libc::sockaddr`",
        help: "it's not guaranteed by Rust standard library. See https://github.com/rust-lang/rust/pull/78802"
    }
    p_mut_mut_ver = {
        "wrong assumption of layout compatibility from `std::net::SocketAddrV6` to `libc::sockaddr`",
        help: "it's not guaranteed by Rust standard library. See https://github.com/rust-lang/rust/pull/78802"
    }
}
