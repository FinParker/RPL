pattern uninit-assumed-init

patt {
    use std::mem::MaybeUninit;
    
    uninit_assumed_init[$T: type where !can_be_uninit(self)] = fn _(..) {
        let $maybe_uninit: MaybeUninit<$T> = MaybeUninit::uninit();
        'assume_init:
        let $value: $T = MaybeUninit::assume_init(move $maybe_uninit);
    }
}

diag {
    uninit_assumed_init = {
        primary(assume_init) = "this call for this type may be undefined behavior",
        name                 = "uninit_assumed_init",
        level                = "warn",
    }
}
