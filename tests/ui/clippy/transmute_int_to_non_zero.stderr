error: transmute from a `u8` to a `NonZero<u8>`
  --> tests/ui/clippy/transmute_int_to_non_zero.rs:17:35
   |
LL |     let _: NonZero<u8> = unsafe { std::mem::transmute(int_u8) };
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `NonZero::new_unchecked(int_u8)`
   |
   = help: consider using `NonZero::new_unchecked` instead, or use `NonZero::new` if you want to handle the zero case safely
   = note: `-D rpl::transmute-int-to-non-zero` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(rpl::transmute_int_to_non_zero)]`

error: transmute from a `u16` to a `NonZero<u16>`
  --> tests/ui/clippy/transmute_int_to_non_zero.rs:20:36
   |
LL |     let _: NonZero<u16> = unsafe { std::mem::transmute(int_u16) };
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `NonZero::new_unchecked(int_u16)`
   |
   = help: consider using `NonZero::new_unchecked` instead, or use `NonZero::new` if you want to handle the zero case safely

error: transmute from a `u32` to a `NonZero<u32>`
  --> tests/ui/clippy/transmute_int_to_non_zero.rs:23:36
   |
LL |     let _: NonZero<u32> = unsafe { std::mem::transmute(int_u32) };
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `NonZero::new_unchecked(int_u32)`
   |
   = help: consider using `NonZero::new_unchecked` instead, or use `NonZero::new` if you want to handle the zero case safely

error: transmute from a `u64` to a `NonZero<u64>`
  --> tests/ui/clippy/transmute_int_to_non_zero.rs:26:36
   |
LL |     let _: NonZero<u64> = unsafe { std::mem::transmute(int_u64) };
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `NonZero::new_unchecked(int_u64)`
   |
   = help: consider using `NonZero::new_unchecked` instead, or use `NonZero::new` if you want to handle the zero case safely

error: transmute from a `u128` to a `NonZero<u128>`
  --> tests/ui/clippy/transmute_int_to_non_zero.rs:29:37
   |
LL |     let _: NonZero<u128> = unsafe { std::mem::transmute(int_u128) };
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `NonZero::new_unchecked(int_u128)`
   |
   = help: consider using `NonZero::new_unchecked` instead, or use `NonZero::new` if you want to handle the zero case safely

error: transmute from a `i8` to a `NonZero<i8>`
  --> tests/ui/clippy/transmute_int_to_non_zero.rs:32:35
   |
LL |     let _: NonZero<i8> = unsafe { std::mem::transmute(int_i8) };
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `NonZero::new_unchecked(int_i8)`
   |
   = help: consider using `NonZero::new_unchecked` instead, or use `NonZero::new` if you want to handle the zero case safely

error: transmute from a `i16` to a `NonZero<i16>`
  --> tests/ui/clippy/transmute_int_to_non_zero.rs:35:36
   |
LL |     let _: NonZero<i16> = unsafe { std::mem::transmute(int_i16) };
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `NonZero::new_unchecked(int_i16)`
   |
   = help: consider using `NonZero::new_unchecked` instead, or use `NonZero::new` if you want to handle the zero case safely

error: transmute from a `i32` to a `NonZero<i32>`
  --> tests/ui/clippy/transmute_int_to_non_zero.rs:38:36
   |
LL |     let _: NonZero<i32> = unsafe { std::mem::transmute(int_i32) };
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `NonZero::new_unchecked(int_i32)`
   |
   = help: consider using `NonZero::new_unchecked` instead, or use `NonZero::new` if you want to handle the zero case safely

error: transmute from a `i64` to a `NonZero<i64>`
  --> tests/ui/clippy/transmute_int_to_non_zero.rs:41:36
   |
LL |     let _: NonZero<i64> = unsafe { std::mem::transmute(int_i64) };
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `NonZero::new_unchecked(int_i64)`
   |
   = help: consider using `NonZero::new_unchecked` instead, or use `NonZero::new` if you want to handle the zero case safely

error: transmute from a `i128` to a `NonZero<i128>`
  --> tests/ui/clippy/transmute_int_to_non_zero.rs:44:37
   |
LL |     let _: NonZero<i128> = unsafe { std::mem::transmute(int_i128) };
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `NonZero::new_unchecked(int_i128)`
   |
   = help: consider using `NonZero::new_unchecked` instead, or use `NonZero::new` if you want to handle the zero case safely

error: aborting due to 10 previous errors

