digraph ControlFlowGraph {
    bb0 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">?bb0</td></tr><tr><td align="left" balign="left">_?0 = _<br/></td></tr><tr><td align="left">_?1 = std::ops::Range::len:: &lt; ?T0 &gt;(move _?0) -&gt; ?bb1</td></tr></table>>];
    bb1 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">?bb1</td></tr><tr><td align="left">_?2 = std::vec::Vec::with_capacity(copy _?1) -&gt; ?bb2</td></tr></table>>];
    bb2 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">?bb2</td></tr><tr><td align="left" balign="left">_?3 = &amp;mut _?2<br/></td></tr><tr><td align="left">_?4 = std::vec::Vec::as_mut_ptr(move _?3) -&gt; ?bb3</td></tr></table>>];
    bb3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">?bb3</td></tr><tr><td align="left">_?5 = std::slice::from_raw_parts_mut(copy _?4, copy _?1) -&gt; ?bb4</td></tr></table>>];
    bb4 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">?bb4</td></tr><tr><td align="left">_?6 = std::ops::Range::enumerate:: &lt; ?T0 &gt;(move _?0) -&gt; ?bb5</td></tr></table>>];
    bb5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">?bb5</td></tr><tr><td align="left" balign="left">_?7 = &amp;mut _?6<br/></td></tr><tr><td align="left">goto ?bb6</td></tr></table>>];
    bb6 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">?bb6</td></tr><tr><td align="left">_?8 = std::iter::Enumerate::next:: &lt; std::ops::Range&lt; ?T0 &gt; &gt;(move _?7) -&gt; ?bb8</td></tr></table>>];
    bb7 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">?bb7</td></tr><tr><td align="left" balign="left">_?3 = &amp;mut _?2<br/></td></tr><tr><td align="left">_?13 = std::vec::Vec::set_len(move _?3, copy _?1) -&gt; ?bb12</td></tr></table>>];
    bb8 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">?bb8</td></tr><tr><td align="left" balign="left">_?9 = discriminant(_?8)<br/></td></tr><tr><td align="left">switchInt(move _?9) -&gt; [true: ?bb10, otherwise: ?bb11]</td></tr></table>>];
    bb9 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">?bb9</td></tr><tr><td align="left">goto ?bb6</td></tr></table>>];
    bb10 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">?bb10</td></tr><tr><td align="left" balign="left">_?10 = copy ((_?8 as Some).0)<br/>_?11 = copy ((_?8 as Some).1)<br/>_?12 = copy _?11 as usize (IntToInt)<br/>((*_?5)[_?12]) = copy _?10 as ?T0 (IntToInt)<br/></td></tr><tr><td align="left">goto ?bb9</td></tr></table>>];
    bb11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">?bb11</td></tr><tr><td align="left">goto ?bb7</td></tr></table>>];
    bb12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">?bb12</td></tr><tr><td align="left">end</td></tr></table>>];
    bb0 -> bb1 [label="return"];
    bb1 -> bb2 [label="return"];
    bb2 -> bb3 [label="return"];
    bb3 -> bb4 [label="return"];
    bb4 -> bb5 [label="return"];
    bb5 -> bb6 [label="goto"];
    bb6 -> bb8 [label="return"];
    bb7 -> bb12 [label="return"];
    bb8 -> bb10 [label="1"];
    bb8 -> bb11 [label="otherwise"];
    bb9 -> bb6 [label="goto"];
    bb10 -> bb9 [label="goto"];
    bb11 -> bb7 [label="goto"];
}
