digraph name {
    bb0 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">bb0</td></tr><tr><td align="left" balign="left">_?0 = _<br/></td></tr><tr><td align="left">_1 = RangeT::len(move _0) -&gt; bb1</td></tr></table>>];
    bb1 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">bb1</td></tr><tr><td align="left">_2 = std::vec::Vec::with_capacity(copy _1) -&gt; bb2</td></tr></table>>];
    bb2 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">bb2</td></tr><tr><td align="left" balign="left">_?3 = &amp;mut _?2<br/></td></tr><tr><td align="left">_4 = Vec::as_mut_ptr(move _3) -&gt; bb3</td></tr></table>>];
    bb3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">bb3</td></tr><tr><td align="left">_5 = std::slice::from_raw_parts_mut(copy _4, copy _1) -&gt; bb4</td></tr></table>>];
    bb4 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">bb4</td></tr><tr><td align="left">_6 = RangeT::enumerate(move _0) -&gt; bb5</td></tr></table>>];
    bb5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">bb5</td></tr><tr><td align="left" balign="left">_?7 = &amp;mut _?7<br/></td></tr><tr><td align="left">goto bb6</td></tr></table>>];
    bb6 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">bb6</td></tr><tr><td align="left">_8 = EnumerateRangeT::next(move _7) -&gt; bb8</td></tr></table>>];
    bb7 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">bb7</td></tr><tr><td align="left" balign="left">_?3 = &amp;mut _?2<br/></td></tr><tr><td align="left">_13 = Vec::set_len(move _3, copy _1) -&gt; bb13</td></tr></table>>];
    bb8 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">bb8</td></tr><tr><td align="left">_9 = balabala::discriminant(copy _8) -&gt; bb9</td></tr></table>>];
    bb9 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">bb9</td></tr><tr><td align="left">switchInt(move _9) -&gt; [true -&gt; bb11, otherwise -&gt; bb12]</td></tr></table>>];
    bb10 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">bb10</td></tr><tr><td align="left">goto bb6</td></tr></table>>];
    bb11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">bb11</td></tr><tr><td align="left" balign="left">_?10 = copy ((_?8 as Some).0)<br/>_?11 = copy ((_?8 as Some).1)<br/>_?12 = copy _?11 as usize (IntToInt)<br/>((*_?5)[_?12]) = copy _?10 as ?T0 (IntToInt)<br/></td></tr><tr><td align="left">goto bb10</td></tr></table>>];
    bb12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">bb12</td></tr><tr><td align="left">goto bb7</td></tr></table>>];
    bb13 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td  align="center" colspan="1">bb13</td></tr><tr><td align="left">end</td></tr></table>>];
    bb0 -> bb1 [label="AssignOnReturn"];
    bb1 -> bb2 [label="AssignOnReturn"];
    bb2 -> bb3 [label="AssignOnReturn"];
    bb3 -> bb4 [label="AssignOnReturn"];
    bb4 -> bb5 [label="AssignOnReturn"];
    bb5 -> bb6 [label=""];
    bb6 -> bb8 [label="AssignOnReturn"];
    bb7 -> bb13 [label="AssignOnReturn"];
    bb8 -> bb9 [label="AssignOnReturn"];
    bb9 -> bb11 [label="1"];
    bb9 -> bb12 [label="Otherwise"];
    bb10 -> bb6 [label=""];
    bb11 -> bb10 [label=""];
    bb12 -> bb7 [label=""];
}
